; Below here is copied from https://www.harrisgeospatial.com/docs/programmingguidegettingstarted.html#Writing and
; Below here is copied from https://www.harrisgeospatial.com/docs/ENVIISODATAClassificationTask.html
; The ordering is adapted for my needs
; The goal of this is to be able to pass a file name to IDL and have it run a kmeans classification
; on all the images in the fild location
; this will allow me to run/rerun my classifications for a class project
; if this fails I'll still have a project and was able to learn a bit about IDL
; I hate this syntax with a passion

PRO batchClusterData
  COMPILE_OPT IDL2
   
  ; Start the application ; Start the application
  e = ENVI() ; from the Isodata portion
  e = ENVI(/HEADLESS) ; from the batch processing
 
   
  ; Select input files
  isoDataDir = Filepath('', Subdir=['data','time_series'], $
    Root_Dir = e.Root_Dir)
  filesToProcess = File_Search(isoDataDir, 'AirTemp*.dat')
 
 ; Get the  task from the catalog of ENVITasks
  Task = ENVITask('ISODATAClassification')
   
  ; this is a For loop to do whatever you want to do 
  For i=0, N_Elements(filesToProcess)-1 DO BEGIN
    Raster = e.OpenRaster(filesToProcess[i])
    Task.Input_Raster = Raster    
    
    ;Need to establish a new file name for each one
    noExt = STRSPLIT(Raster,'.tif',/EXTRACT)
    noExt = STRSPLIT(Raster,'.TIF',/EXTRACT)
    newFileName = noExt+"_kMeans"      
    
    newFileName = 
    ; Define outputs
    Task.Output_Raster_URI = newFileName
    
    ; Run the task
    Task.Execute
    
    ; Get the collection of data objects currently available in the Data Manager
    DataColl = e.Data
 
    ; Add the output to the Data Manager
    DataColl.Add, Task.Output_Raster
 
    ; Display the result
    View1 = e.GetView()
    Layer1 = View1.CreateLayer(Task.Output_Raster)
    
  Endfor
  
  e.Close
END

 
 
